/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clases;

import clases.Lexer;
import clases.Sintax;
import clases.Tokens;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java_cup.runtime.Symbol;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rodolfo
 */
public class FramePrincipal extends javax.swing.JFrame {

    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
    }
    public void analizadorSintactico(){
        String ST = codigoFuente.getText();
        Sintax s = new Sintax(new clases.LexerCup(new StringReader(ST)));
        
        try {
            s.parse();
            analisisSintacticoResultado.setText("Analisis realizado correctamente");
            analisisSintacticoResultado.setForeground(new Color(25, 111, 61));
        } catch (Exception ex) {
            Symbol sym = s.getS();
            analisisSintacticoResultado.setText("Error de sintaxis. Linea: " + (sym.right + 1) + " Columna: " + (sym.left + 1) + ", Texto: \"" + sym.value + "\"");
            analisisSintacticoResultado.setForeground(Color.red);
        }
    }
    public void analizadorLexico(Reader lector) throws IOException{
            int contadorLineas =1;
            Lexer lexer = new Lexer(lector);
            ArrayList<String[]> resultado = new ArrayList<>();
            DefaultTableModel model = (DefaultTableModel) tokensTable.getModel();
            model.getDataVector().removeAllElements();
            model.addRow(new String[]{"Linea", contadorLineas+""});
            contadorLineas++;
            while(true)
            {
                Tokens tokens = lexer.yylex();
                if(tokens==null)
                {
                    //resultado+="FIN";
                    //tokensSalida.setText(resultado);
         
                    model.addRow(resultado.toArray());
                    return;
                }
                switch (tokens) {
                    
                    case Linea: 
                        model.addRow(new String[]{tokens.toString(), contadorLineas+""});
                        contadorLineas++;
                        break;
                    case ERROR:
                        model.addRow(new String[]{"Caracter no Definido.", ""});
                        break;
                    default:
                        model.addRow(new String[]{ lexer.lexeme, tokens.toString() });
                        break;
                }
            }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        codigoFuente = new javax.swing.JTextArea();
        codigoFuenteLabel = new javax.swing.JLabel();
        tokensLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tokensTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        analisisSintacticoResultado = new javax.swing.JTextArea();
        sintaticAnalixLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        codigoFuente.setColumns(20);
        codigoFuente.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        codigoFuente.setRows(5);
        jScrollPane2.setViewportView(codigoFuente);

        codigoFuenteLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        codigoFuenteLabel.setText("Codigo Fuente");

        tokensLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tokensLabel.setText("Tokens");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("Analizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tokensTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tokensTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Token", "Lexema"
            }
        ));
        jScrollPane3.setViewportView(tokensTable);

        jLabel1.setText("By Jos√© Rodolfo Morel, Mat: 1-16-0328.");

        analisisSintacticoResultado.setColumns(20);
        analisisSintacticoResultado.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        analisisSintacticoResultado.setRows(5);
        jScrollPane1.setViewportView(analisisSintacticoResultado);

        sintaticAnalixLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sintaticAnalixLabel2.setText("Analisis Sintactico");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sintaticAnalixLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(codigoFuenteLabel))
                        .addGap(164, 164, 164)
                        .addComponent(tokensLabel)
                        .addGap(188, 188, 188)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(codigoFuenteLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(tokensLabel))
                    .addComponent(jButton1))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(sintaticAnalixLabel2)
                .addGap(1, 1, 1)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        File archivo = new File("archivo.txt");
        PrintWriter escritor;
        
        try {
            escritor = new PrintWriter(archivo);
            escritor.print(codigoFuente.getText());
            escritor.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        Reader lector;
        
        
        try {
            lector = new BufferedReader(new FileReader("archivo.txt"));
            analizadorLexico(lector);
            analizadorSintactico();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea analisisSintacticoResultado;
    private javax.swing.JTextArea codigoFuente;
    private javax.swing.JLabel codigoFuenteLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel sintaticAnalixLabel2;
    private javax.swing.JLabel tokensLabel;
    private javax.swing.JTable tokensTable;
    // End of variables declaration//GEN-END:variables
}
